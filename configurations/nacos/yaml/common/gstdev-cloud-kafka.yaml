spring:
  cloud:
    bus:
      id: ${spring.application.name}:${server.port}
      destination: gstdev-cloud-bus
    stream:
      kafka:
        binder:
          brokers: ${gstdev.cloud.environment.kafka.bootstrap-servers}
          default-broker-port: 9092
          auto-add-partitions: true
          auto-create-topics: true
          min-partition-count: 1
          configuration:
            commit.interval.ms: 1000
            default.key.serde: org.apache.kafka.common.serialization.Serdes$StringSerde
            default.value.serde: org.apache.kafka.common.serialization.Serdes$StringSerde
          producer-properties:
            # 发生错误后，消息重发的次数。
            retries: 1
            # acks=0 ： 生产者在成功写入消息之前不会等待任何来自服务器的响应。
            # acks=1 ： 只要集群的首领节点收到消息，生产者就会收到一个来自服务器成功响应。
            # acks=all ：只有当所有参与复制的节点全部收到消息时，生产者才会收到一个来自服务器的成功响应。
            acks: 1
            #当有多个消息需要被发送到同一个分区时，生产者会把它们放在同一个批次里。该参数指定了一个批次可以使用的内存大小，按照字节数计算。
            batch.size: 16384
            # 设置生产者内存缓冲区的大小。
            buffer.memory: 33554432
            # 10ms的延迟
            linger.ms: 1
          consumer-properties:
            allow.auto.create.topics: true
            auto.commit.interval.ms: 1000
      function:
        bindings:
          busConsumer-out-0: springCloudBusOutput
          busConsumer-in-0: springCloudBusInput
          webSocketConsumer-out-0: webSocketMultipleInstanceSyncOutput
          webSocketConsumer-in-0: webSocketMultipleInstanceSyncInput
      bindings:
        springCloudBusOutput:
          content-type: application/json
          destination: ${spring.cloud.bus.destination}
        springCloudBusInput:
          content-type: application/json
          destination: ${spring.cloud.bus.destination}
          group: ${spring.application.name}
        webSocketMultipleInstanceSyncOutput:
          content-type: application/json
          destination: WebSocketMultipleInstanceSync
        webSocketMultipleInstanceSyncInput:
          content-type: application/json
          destination: WebSocketMultipleInstanceSync